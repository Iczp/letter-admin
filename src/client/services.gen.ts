// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
  formDataBodySerializer,
} from '@hey-api/client-axios';
import type {
  AppControllerGetInfoError,
  AppControllerGetInfoResponse,
  AppControllerGetTablesError,
  AppControllerGetTablesResponse,
  AppControllerGetTableData,
  AppControllerGetTableError,
  AppControllerGetTableResponse,
  AppControllerGetAboutError,
  AppControllerGetAboutResponse,
  UsersControllerGetListData,
  UsersControllerGetListError,
  UsersControllerGetListResponse,
  UsersControllerCreateData,
  UsersControllerCreateError,
  UsersControllerCreateResponse,
  UsersControllerDeleteManyData,
  UsersControllerDeleteManyError,
  UsersControllerDeleteManyResponse,
  UsersControllerGetItemData,
  UsersControllerGetItemError,
  UsersControllerGetItemResponse,
  UsersControllerUpdateData,
  UsersControllerUpdateError,
  UsersControllerUpdateResponse,
  UsersControllerSetIsEnabledData,
  UsersControllerSetIsEnabledError,
  UsersControllerSetIsEnabledResponse,
  UsersControllerGetExcelTemplateError,
  UsersControllerGetExcelTemplateResponse,
  UsersControllerExportExcelError,
  UsersControllerExportExcelResponse,
  UsersControllerImportExcelData,
  UsersControllerImportExcelError,
  UsersControllerImportExcelResponse,
  ActivitiesControllerGetListData,
  ActivitiesControllerGetListError,
  ActivitiesControllerGetListResponse,
  ActivitiesControllerCreateData,
  ActivitiesControllerCreateError,
  ActivitiesControllerCreateResponse,
  ActivitiesControllerDeleteManyData,
  ActivitiesControllerDeleteManyError,
  ActivitiesControllerDeleteManyResponse,
  ActivitiesControllerGetListByCurrentUserError,
  ActivitiesControllerGetListByCurrentUserResponse,
  ActivitiesControllerGetItemData,
  ActivitiesControllerGetItemError,
  ActivitiesControllerGetItemResponse,
  ActivitiesControllerUpdateData,
  ActivitiesControllerUpdateError,
  ActivitiesControllerUpdateResponse,
  ActivitiesControllerSetIsEnabledData,
  ActivitiesControllerSetIsEnabledError,
  ActivitiesControllerSetIsEnabledResponse,
  ActivitiesControllerGetExcelTemplateError,
  ActivitiesControllerGetExcelTemplateResponse,
  ActivitiesControllerExportExcelError,
  ActivitiesControllerExportExcelResponse,
  ActivitiesControllerImportExcelData,
  ActivitiesControllerImportExcelError,
  ActivitiesControllerImportExcelResponse,
  ActivityCustomerControllerGetListData,
  ActivityCustomerControllerGetListError,
  ActivityCustomerControllerGetListResponse,
  ActivityCustomerControllerCreateData,
  ActivityCustomerControllerCreateError,
  ActivityCustomerControllerCreateResponse,
  ActivityCustomerControllerDeleteManyData,
  ActivityCustomerControllerDeleteManyError,
  ActivityCustomerControllerDeleteManyResponse,
  ActivityCustomerControllerGetItemData,
  ActivityCustomerControllerGetItemError,
  ActivityCustomerControllerGetItemResponse,
  ActivityCustomerControllerUpdateData,
  ActivityCustomerControllerUpdateError,
  ActivityCustomerControllerUpdateResponse,
  ActivityCustomerControllerSetIsCheckedData,
  ActivityCustomerControllerSetIsCheckedError,
  ActivityCustomerControllerSetIsCheckedResponse,
  ActivityCustomerControllerSetIsActivedData,
  ActivityCustomerControllerSetIsActivedError,
  ActivityCustomerControllerSetIsActivedResponse,
  ActivityCustomerControllerExportExcelData,
  ActivityCustomerControllerExportExcelError,
  ActivityCustomerControllerExportExcelResponse,
  ActivityCustomerControllerSetIsEnabledData,
  ActivityCustomerControllerSetIsEnabledError,
  ActivityCustomerControllerSetIsEnabledResponse,
  ActivityCustomerControllerGetExcelTemplateError,
  ActivityCustomerControllerGetExcelTemplateResponse,
  ActivityCustomerControllerImportExcelData,
  ActivityCustomerControllerImportExcelError,
  ActivityCustomerControllerImportExcelResponse,
  ActivityCustomerInvitersControllerGetListData,
  ActivityCustomerInvitersControllerGetListError,
  ActivityCustomerInvitersControllerGetListResponse,
  ActivityCustomerInvitersControllerCreateData,
  ActivityCustomerInvitersControllerCreateError,
  ActivityCustomerInvitersControllerCreateResponse,
  ActivityCustomerInvitersControllerDeleteManyData,
  ActivityCustomerInvitersControllerDeleteManyError,
  ActivityCustomerInvitersControllerDeleteManyResponse,
  ActivityCustomerInvitersControllerGetItemData,
  ActivityCustomerInvitersControllerGetItemError,
  ActivityCustomerInvitersControllerGetItemResponse,
  ActivityCustomerInvitersControllerUpdateData,
  ActivityCustomerInvitersControllerUpdateError,
  ActivityCustomerInvitersControllerUpdateResponse,
  ActivityCustomerInvitersControllerSetIsEnabledData,
  ActivityCustomerInvitersControllerSetIsEnabledError,
  ActivityCustomerInvitersControllerSetIsEnabledResponse,
  ActivityCustomerInvitersControllerGetExcelTemplateError,
  ActivityCustomerInvitersControllerGetExcelTemplateResponse,
  ActivityCustomerInvitersControllerExportExcelError,
  ActivityCustomerInvitersControllerExportExcelResponse,
  ActivityCustomerInvitersControllerImportExcelData,
  ActivityCustomerInvitersControllerImportExcelError,
  ActivityCustomerInvitersControllerImportExcelResponse,
  AuthControllerSignInData,
  AuthControllerSignInError,
  AuthControllerSignInResponse,
  AuthControllerGetProfileError,
  AuthControllerGetProfileResponse,
  AuthControllerRefreshTokenError,
  AuthControllerRefreshTokenResponse,
  SeedControllerSeedError,
  SeedControllerSeedResponse,
  RolesControllerGetListData,
  RolesControllerGetListError,
  RolesControllerGetListResponse,
  RolesControllerCreateData,
  RolesControllerCreateError,
  RolesControllerCreateResponse,
  RolesControllerDeleteManyData,
  RolesControllerDeleteManyError,
  RolesControllerDeleteManyResponse,
  RolesControllerGetItemData,
  RolesControllerGetItemError,
  RolesControllerGetItemResponse,
  RolesControllerUpdateData,
  RolesControllerUpdateError,
  RolesControllerUpdateResponse,
  RolesControllerSetPermissionsData,
  RolesControllerSetPermissionsError,
  RolesControllerSetPermissionsResponse,
  RolesControllerSetIsEnabledData,
  RolesControllerSetIsEnabledError,
  RolesControllerSetIsEnabledResponse,
  RolesControllerGetExcelTemplateError,
  RolesControllerGetExcelTemplateResponse,
  RolesControllerExportExcelError,
  RolesControllerExportExcelResponse,
  RolesControllerImportExcelData,
  RolesControllerImportExcelError,
  RolesControllerImportExcelResponse,
  AuditsControllerGetListData,
  AuditsControllerGetListError,
  AuditsControllerGetListResponse,
  AuditsControllerDeleteManyData,
  AuditsControllerDeleteManyError,
  AuditsControllerDeleteManyResponse,
  AuditsControllerGetItemData,
  AuditsControllerGetItemError,
  AuditsControllerGetItemResponse,
  AuditsControllerSetIsEnabledData,
  AuditsControllerSetIsEnabledError,
  AuditsControllerSetIsEnabledResponse,
  AuditsControllerGetExcelTemplateError,
  AuditsControllerGetExcelTemplateResponse,
  AuditsControllerExportExcelError,
  AuditsControllerExportExcelResponse,
  AuditsControllerImportExcelData,
  AuditsControllerImportExcelError,
  AuditsControllerImportExcelResponse,
  ErpUsersControllerFindAllData,
  ErpUsersControllerFindAllError,
  ErpUsersControllerFindAllResponse,
  ErpUsersControllerFindOneData,
  ErpUsersControllerFindOneError,
  ErpUsersControllerFindOneResponse,
  InviterConfigControllerGetListData,
  InviterConfigControllerGetListError,
  InviterConfigControllerGetListResponse,
  InviterConfigControllerCreateData,
  InviterConfigControllerCreateError,
  InviterConfigControllerCreateResponse,
  InviterConfigControllerDeleteManyData,
  InviterConfigControllerDeleteManyError,
  InviterConfigControllerDeleteManyResponse,
  InviterConfigControllerGetItemData,
  InviterConfigControllerGetItemError,
  InviterConfigControllerGetItemResponse,
  InviterConfigControllerUpdateData,
  InviterConfigControllerUpdateError,
  InviterConfigControllerUpdateResponse,
  InviterConfigControllerGetItemByCurrentUserError,
  InviterConfigControllerGetItemByCurrentUserResponse,
  InviterConfigControllerSetIsEnabledData,
  InviterConfigControllerSetIsEnabledError,
  InviterConfigControllerSetIsEnabledResponse,
  InviterConfigControllerGetExcelTemplateError,
  InviterConfigControllerGetExcelTemplateResponse,
  InviterConfigControllerExportExcelError,
  InviterConfigControllerExportExcelResponse,
  InviterConfigControllerImportExcelData,
  InviterConfigControllerImportExcelError,
  InviterConfigControllerImportExcelResponse,
} from './types.gen';

export const client = createClient(createConfig());

/**
 * 关于 App Test
 */
export const appGetInfo = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AppControllerGetInfoResponse,
    AppControllerGetInfoError,
    ThrowOnError
  >({
    ...options,
    url: '/api/test',
  });
};

/**
 * get tables
 */
export const appGetTables = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AppControllerGetTablesResponse,
    AppControllerGetTablesError,
    ThrowOnError
  >({
    ...options,
    url: '/api/tables',
  });
};

/**
 * get table
 */
export const appGetTable = <ThrowOnError extends boolean = false>(
  options: Options<AppControllerGetTableData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AppControllerGetTableResponse,
    AppControllerGetTableError,
    ThrowOnError
  >({
    ...options,
    url: '/api/table',
  });
};

/**
 * 关于 App 信息
 * 返回 AppInfo
 */
export const appGetAbout = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AppControllerGetAboutResponse,
    AppControllerGetAboutError,
    ThrowOnError
  >({
    ...options,
    url: '/api/about',
  });
};

/**
 * 用户列表
 */
export const usersGetList = <ThrowOnError extends boolean = false>(
  options?: Options<UsersControllerGetListData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    UsersControllerGetListResponse,
    UsersControllerGetListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/user',
  });
};

/**
 * 创建用户
 */
export const usersCreate = <ThrowOnError extends boolean = false>(
  options: Options<UsersControllerCreateData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    UsersControllerCreateResponse,
    UsersControllerCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/user',
  });
};

/**
 * 删除
 */
export const usersDeleteMany = <ThrowOnError extends boolean = false>(
  options: Options<UsersControllerDeleteManyData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    UsersControllerDeleteManyResponse,
    UsersControllerDeleteManyError,
    ThrowOnError
  >({
    ...options,
    url: '/api/user',
  });
};

/**
 * 用户详情
 */
export const usersGetItem = <ThrowOnError extends boolean = false>(
  options: Options<UsersControllerGetItemData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    UsersControllerGetItemResponse,
    UsersControllerGetItemError,
    ThrowOnError
  >({
    ...options,
    url: '/api/user/{id}',
  });
};

/**
 * 修改用户
 */
export const usersUpdate = <ThrowOnError extends boolean = false>(
  options: Options<UsersControllerUpdateData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    UsersControllerUpdateResponse,
    UsersControllerUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/user/{id}',
  });
};

/**
 * 启用/禁用
 * 启用/禁用
 */
export const usersSetIsEnabled = <ThrowOnError extends boolean = false>(
  options: Options<UsersControllerSetIsEnabledData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    UsersControllerSetIsEnabledResponse,
    UsersControllerSetIsEnabledError,
    ThrowOnError
  >({
    ...options,
    url: '/api/user/enabled/{id}',
  });
};

/**
 * excel 模板
 * excel 模板
 */
export const usersGetExcelTemplate = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    UsersControllerGetExcelTemplateResponse,
    UsersControllerGetExcelTemplateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/user/excel/tpl',
  });
};

/**
 * 导出数据到 Excel
 * Excel 数据
 */
export const usersExportExcel = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    UsersControllerExportExcelResponse,
    UsersControllerExportExcelError,
    ThrowOnError
  >({
    ...options,
    url: '/api/user/excel/output',
  });
};

/**
 * 导入数据
 * 请从 "/xxx/excel/tpl" 中下载模板
 */
export const usersImportExcel = <ThrowOnError extends boolean = false>(
  options: Options<UsersControllerImportExcelData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    UsersControllerImportExcelResponse,
    UsersControllerImportExcelError,
    ThrowOnError
  >({
    ...options,
    ...formDataBodySerializer,
    headers: {
      'Content-Type': null,
      ...options?.headers,
    },
    url: '/api/user/excel/import',
  });
};

/**
 * 活动列表
 */
export const activitiesGetList = <ThrowOnError extends boolean = false>(
  options?: Options<ActivitiesControllerGetListData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ActivitiesControllerGetListResponse,
    ActivitiesControllerGetListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activities',
  });
};

/**
 * 创建活动
 */
export const activitiesCreate = <ThrowOnError extends boolean = false>(
  options: Options<ActivitiesControllerCreateData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ActivitiesControllerCreateResponse,
    ActivitiesControllerCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activities',
  });
};

/**
 * 删除
 */
export const activitiesDeleteMany = <ThrowOnError extends boolean = false>(
  options: Options<ActivitiesControllerDeleteManyData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    ActivitiesControllerDeleteManyResponse,
    ActivitiesControllerDeleteManyError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activities',
  });
};

/**
 * 活动列表
 */
export const activitiesGetListByCurrentUser = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ActivitiesControllerGetListByCurrentUserResponse,
    ActivitiesControllerGetListByCurrentUserError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activities/current-user/list',
  });
};

/**
 * 活动详情
 */
export const activitiesGetItem = <ThrowOnError extends boolean = false>(
  options: Options<ActivitiesControllerGetItemData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ActivitiesControllerGetItemResponse,
    ActivitiesControllerGetItemError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activities/{id}',
  });
};

/**
 * 修改活动
 */
export const activitiesUpdate = <ThrowOnError extends boolean = false>(
  options: Options<ActivitiesControllerUpdateData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    ActivitiesControllerUpdateResponse,
    ActivitiesControllerUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activities/{id}',
  });
};

/**
 * 启用/禁用
 * 启用/禁用
 */
export const activitiesSetIsEnabled = <ThrowOnError extends boolean = false>(
  options: Options<ActivitiesControllerSetIsEnabledData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ActivitiesControllerSetIsEnabledResponse,
    ActivitiesControllerSetIsEnabledError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activities/enabled/{id}',
  });
};

/**
 * excel 模板
 * excel 模板
 */
export const activitiesGetExcelTemplate = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ActivitiesControllerGetExcelTemplateResponse,
    ActivitiesControllerGetExcelTemplateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activities/excel/tpl',
  });
};

/**
 * 导出数据到 Excel
 * Excel 数据
 */
export const activitiesExportExcel = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ActivitiesControllerExportExcelResponse,
    ActivitiesControllerExportExcelError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activities/excel/output',
  });
};

/**
 * 导入数据
 * 请从 "/xxx/excel/tpl" 中下载模板
 */
export const activitiesImportExcel = <ThrowOnError extends boolean = false>(
  options: Options<ActivitiesControllerImportExcelData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ActivitiesControllerImportExcelResponse,
    ActivitiesControllerImportExcelError,
    ThrowOnError
  >({
    ...options,
    ...formDataBodySerializer,
    headers: {
      'Content-Type': null,
      ...options?.headers,
    },
    url: '/api/activities/excel/import',
  });
};

/**
 * [活动客户]列表
 */
export const activityCustomerGetList = <ThrowOnError extends boolean = false>(
  options?: Options<ActivityCustomerControllerGetListData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ActivityCustomerControllerGetListResponse,
    ActivityCustomerControllerGetListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer',
  });
};

/**
 * 创建[活动客户]
 */
export const activityCustomerCreate = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerControllerCreateData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ActivityCustomerControllerCreateResponse,
    ActivityCustomerControllerCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer',
  });
};

/**
 * 删除
 */
export const activityCustomerDeleteMany = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerControllerDeleteManyData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    ActivityCustomerControllerDeleteManyResponse,
    ActivityCustomerControllerDeleteManyError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer',
  });
};

/**
 * [活动客户]详情
 */
export const activityCustomerGetItem = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerControllerGetItemData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ActivityCustomerControllerGetItemResponse,
    ActivityCustomerControllerGetItemError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer/{id}',
  });
};

/**
 * 修改[活动客户]
 */
export const activityCustomerUpdate = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerControllerUpdateData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    ActivityCustomerControllerUpdateResponse,
    ActivityCustomerControllerUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer/{id}',
  });
};

/**
 * 设置 是否签到
 */
export const activityCustomerSetIsChecked = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerControllerSetIsCheckedData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ActivityCustomerControllerSetIsCheckedResponse,
    ActivityCustomerControllerSetIsCheckedError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer/checked/{id}',
  });
};

/**
 * 设置 是否已邀请
 */
export const activityCustomerSetIsActived = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerControllerSetIsActivedData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ActivityCustomerControllerSetIsActivedResponse,
    ActivityCustomerControllerSetIsActivedError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer/invited/{id}',
  });
};

/**
 * [活动客户]导出 excel
 * 导出excel 单次导出数据不能太多
 */
export const activityCustomerExportExcel = <ThrowOnError extends boolean = false>(
  options?: Options<ActivityCustomerControllerExportExcelData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ActivityCustomerControllerExportExcelResponse,
    ActivityCustomerControllerExportExcelError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer/excel/output',
  });
};

/**
 * 启用/禁用
 * 启用/禁用
 */
export const activityCustomerSetIsEnabled = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerControllerSetIsEnabledData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ActivityCustomerControllerSetIsEnabledResponse,
    ActivityCustomerControllerSetIsEnabledError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer/enabled/{id}',
  });
};

/**
 * excel 模板
 * excel 模板
 */
export const activityCustomerGetExcelTemplate = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ActivityCustomerControllerGetExcelTemplateResponse,
    ActivityCustomerControllerGetExcelTemplateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer/excel/tpl',
  });
};

/**
 * 导入数据
 * 请从 "/xxx/excel/tpl" 中下载模板
 */
export const activityCustomerImportExcel = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerControllerImportExcelData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ActivityCustomerControllerImportExcelResponse,
    ActivityCustomerControllerImportExcelError,
    ThrowOnError
  >({
    ...options,
    ...formDataBodySerializer,
    headers: {
      'Content-Type': null,
      ...options?.headers,
    },
    url: '/api/activity-customer/excel/import',
  });
};

/**
 * 客户列表
 */
export const activityCustomerInvitersGetList = <ThrowOnError extends boolean = false>(
  options?: Options<ActivityCustomerInvitersControllerGetListData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ActivityCustomerInvitersControllerGetListResponse,
    ActivityCustomerInvitersControllerGetListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer-inviters',
  });
};

/**
 * 创建客户
 */
export const activityCustomerInvitersCreate = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerInvitersControllerCreateData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ActivityCustomerInvitersControllerCreateResponse,
    ActivityCustomerInvitersControllerCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer-inviters',
  });
};

/**
 * 删除
 */
export const activityCustomerInvitersDeleteMany = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerInvitersControllerDeleteManyData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    ActivityCustomerInvitersControllerDeleteManyResponse,
    ActivityCustomerInvitersControllerDeleteManyError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer-inviters',
  });
};

/**
 * 客户详情
 */
export const activityCustomerInvitersGetItem = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerInvitersControllerGetItemData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ActivityCustomerInvitersControllerGetItemResponse,
    ActivityCustomerInvitersControllerGetItemError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer-inviters/{id}',
  });
};

/**
 * 修改客户
 */
export const activityCustomerInvitersUpdate = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerInvitersControllerUpdateData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    ActivityCustomerInvitersControllerUpdateResponse,
    ActivityCustomerInvitersControllerUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer-inviters/{id}',
  });
};

/**
 * 启用/禁用
 * 启用/禁用
 */
export const activityCustomerInvitersSetIsEnabled = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerInvitersControllerSetIsEnabledData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ActivityCustomerInvitersControllerSetIsEnabledResponse,
    ActivityCustomerInvitersControllerSetIsEnabledError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer-inviters/enabled/{id}',
  });
};

/**
 * excel 模板
 * excel 模板
 */
export const activityCustomerInvitersGetExcelTemplate = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ActivityCustomerInvitersControllerGetExcelTemplateResponse,
    ActivityCustomerInvitersControllerGetExcelTemplateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer-inviters/excel/tpl',
  });
};

/**
 * 导出数据到 Excel
 * Excel 数据
 */
export const activityCustomerInvitersExportExcel = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ActivityCustomerInvitersControllerExportExcelResponse,
    ActivityCustomerInvitersControllerExportExcelError,
    ThrowOnError
  >({
    ...options,
    url: '/api/activity-customer-inviters/excel/output',
  });
};

/**
 * 导入数据
 * 请从 "/xxx/excel/tpl" 中下载模板
 */
export const activityCustomerInvitersImportExcel = <ThrowOnError extends boolean = false>(
  options: Options<ActivityCustomerInvitersControllerImportExcelData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    ActivityCustomerInvitersControllerImportExcelResponse,
    ActivityCustomerInvitersControllerImportExcelError,
    ThrowOnError
  >({
    ...options,
    ...formDataBodySerializer,
    headers: {
      'Content-Type': null,
      ...options?.headers,
    },
    url: '/api/activity-customer-inviters/excel/import',
  });
};

export const authSignIn = <ThrowOnError extends boolean = false>(
  options: Options<AuthControllerSignInData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AuthControllerSignInResponse,
    AuthControllerSignInError,
    ThrowOnError
  >({
    ...options,
    url: '/api/auth/login',
  });
};

export const authGetProfile = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AuthControllerGetProfileResponse,
    AuthControllerGetProfileError,
    ThrowOnError
  >({
    ...options,
    url: '/api/auth/profile',
  });
};

export const authRefreshToken = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AuthControllerRefreshTokenResponse,
    AuthControllerRefreshTokenError,
    ThrowOnError
  >({
    ...options,
    url: '/api/auth/refresh-token',
  });
};

/**
 * 种子数据
 */
export const seedSeed = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    SeedControllerSeedResponse,
    SeedControllerSeedError,
    ThrowOnError
  >({
    ...options,
    url: '/api/seed',
  });
};

/**
 * 角色列表
 */
export const rolesGetList = <ThrowOnError extends boolean = false>(
  options?: Options<RolesControllerGetListData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    RolesControllerGetListResponse,
    RolesControllerGetListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/roles',
  });
};

/**
 * 创建角色
 */
export const rolesCreate = <ThrowOnError extends boolean = false>(
  options: Options<RolesControllerCreateData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    RolesControllerCreateResponse,
    RolesControllerCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/roles',
  });
};

/**
 * 删除
 */
export const rolesDeleteMany = <ThrowOnError extends boolean = false>(
  options: Options<RolesControllerDeleteManyData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    RolesControllerDeleteManyResponse,
    RolesControllerDeleteManyError,
    ThrowOnError
  >({
    ...options,
    url: '/api/roles',
  });
};

/**
 * 角色详情
 */
export const rolesGetItem = <ThrowOnError extends boolean = false>(
  options: Options<RolesControllerGetItemData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    RolesControllerGetItemResponse,
    RolesControllerGetItemError,
    ThrowOnError
  >({
    ...options,
    url: '/api/roles/{id}',
  });
};

/**
 * 修改角色
 */
export const rolesUpdate = <ThrowOnError extends boolean = false>(
  options: Options<RolesControllerUpdateData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    RolesControllerUpdateResponse,
    RolesControllerUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/roles/{id}',
  });
};

/**
 * 设置权限
 */
export const rolesSetPermissions = <ThrowOnError extends boolean = false>(
  options: Options<RolesControllerSetPermissionsData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    RolesControllerSetPermissionsResponse,
    RolesControllerSetPermissionsError,
    ThrowOnError
  >({
    ...options,
    url: '/api/roles/permissions/{id}',
  });
};

/**
 * 启用/禁用
 * 启用/禁用
 */
export const rolesSetIsEnabled = <ThrowOnError extends boolean = false>(
  options: Options<RolesControllerSetIsEnabledData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    RolesControllerSetIsEnabledResponse,
    RolesControllerSetIsEnabledError,
    ThrowOnError
  >({
    ...options,
    url: '/api/roles/enabled/{id}',
  });
};

/**
 * excel 模板
 * excel 模板
 */
export const rolesGetExcelTemplate = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    RolesControllerGetExcelTemplateResponse,
    RolesControllerGetExcelTemplateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/roles/excel/tpl',
  });
};

/**
 * 导出数据到 Excel
 * Excel 数据
 */
export const rolesExportExcel = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    RolesControllerExportExcelResponse,
    RolesControllerExportExcelError,
    ThrowOnError
  >({
    ...options,
    url: '/api/roles/excel/output',
  });
};

/**
 * 导入数据
 * 请从 "/xxx/excel/tpl" 中下载模板
 */
export const rolesImportExcel = <ThrowOnError extends boolean = false>(
  options: Options<RolesControllerImportExcelData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    RolesControllerImportExcelResponse,
    RolesControllerImportExcelError,
    ThrowOnError
  >({
    ...options,
    ...formDataBodySerializer,
    headers: {
      'Content-Type': null,
      ...options?.headers,
    },
    url: '/api/roles/excel/import',
  });
};

/**
 * 审计日志列表
 */
export const auditsGetList = <ThrowOnError extends boolean = false>(
  options?: Options<AuditsControllerGetListData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AuditsControllerGetListResponse,
    AuditsControllerGetListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/audits',
  });
};

/**
 * 删除
 */
export const auditsDeleteMany = <ThrowOnError extends boolean = false>(
  options: Options<AuditsControllerDeleteManyData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    AuditsControllerDeleteManyResponse,
    AuditsControllerDeleteManyError,
    ThrowOnError
  >({
    ...options,
    url: '/api/audits',
  });
};

/**
 * 审计日志详情
 */
export const auditsGetItem = <ThrowOnError extends boolean = false>(
  options: Options<AuditsControllerGetItemData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AuditsControllerGetItemResponse,
    AuditsControllerGetItemError,
    ThrowOnError
  >({
    ...options,
    url: '/api/audits/{id}',
  });
};

/**
 * 启用/禁用
 * 启用/禁用
 */
export const auditsSetIsEnabled = <ThrowOnError extends boolean = false>(
  options: Options<AuditsControllerSetIsEnabledData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AuditsControllerSetIsEnabledResponse,
    AuditsControllerSetIsEnabledError,
    ThrowOnError
  >({
    ...options,
    url: '/api/audits/enabled/{id}',
  });
};

/**
 * excel 模板
 * excel 模板
 */
export const auditsGetExcelTemplate = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AuditsControllerGetExcelTemplateResponse,
    AuditsControllerGetExcelTemplateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/audits/excel/tpl',
  });
};

/**
 * 导出数据到 Excel
 * Excel 数据
 */
export const auditsExportExcel = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    AuditsControllerExportExcelResponse,
    AuditsControllerExportExcelError,
    ThrowOnError
  >({
    ...options,
    url: '/api/audits/excel/output',
  });
};

/**
 * 导入数据
 * 请从 "/xxx/excel/tpl" 中下载模板
 */
export const auditsImportExcel = <ThrowOnError extends boolean = false>(
  options: Options<AuditsControllerImportExcelData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    AuditsControllerImportExcelResponse,
    AuditsControllerImportExcelError,
    ThrowOnError
  >({
    ...options,
    ...formDataBodySerializer,
    headers: {
      'Content-Type': null,
      ...options?.headers,
    },
    url: '/api/audits/excel/import',
  });
};

/**
 * ERP 用户列表
 */
export const erpUsersFindAll = <ThrowOnError extends boolean = false>(
  options?: Options<ErpUsersControllerFindAllData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ErpUsersControllerFindAllResponse,
    ErpUsersControllerFindAllError,
    ThrowOnError
  >({
    ...options,
    url: '/api/erp-users',
  });
};

/**
 * ERP 用户详情
 */
export const erpUsersFindOne = <ThrowOnError extends boolean = false>(
  options: Options<ErpUsersControllerFindOneData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ErpUsersControllerFindOneResponse,
    ErpUsersControllerFindOneError,
    ThrowOnError
  >({
    ...options,
    url: '/api/erp-users/{id}',
  });
};

/**
 * 邀请人列表
 */
export const inviterConfigGetList = <ThrowOnError extends boolean = false>(
  options?: Options<InviterConfigControllerGetListData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    InviterConfigControllerGetListResponse,
    InviterConfigControllerGetListError,
    ThrowOnError
  >({
    ...options,
    url: '/api/inviter-config',
  });
};

/**
 * 创建邀请人
 */
export const inviterConfigCreate = <ThrowOnError extends boolean = false>(
  options: Options<InviterConfigControllerCreateData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    InviterConfigControllerCreateResponse,
    InviterConfigControllerCreateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/inviter-config',
  });
};

/**
 * 删除
 */
export const inviterConfigDeleteMany = <ThrowOnError extends boolean = false>(
  options: Options<InviterConfigControllerDeleteManyData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    InviterConfigControllerDeleteManyResponse,
    InviterConfigControllerDeleteManyError,
    ThrowOnError
  >({
    ...options,
    url: '/api/inviter-config',
  });
};

/**
 * 邀请人详情
 */
export const inviterConfigGetItem = <ThrowOnError extends boolean = false>(
  options: Options<InviterConfigControllerGetItemData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    InviterConfigControllerGetItemResponse,
    InviterConfigControllerGetItemError,
    ThrowOnError
  >({
    ...options,
    url: '/api/inviter-config/{id}',
  });
};

/**
 * 修改邀请人
 */
export const inviterConfigUpdate = <ThrowOnError extends boolean = false>(
  options: Options<InviterConfigControllerUpdateData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    InviterConfigControllerUpdateResponse,
    InviterConfigControllerUpdateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/inviter-config/{id}',
  });
};

/**
 * 邀请人详情
 */
export const inviterConfigGetItemByCurrentUser = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    InviterConfigControllerGetItemByCurrentUserResponse,
    InviterConfigControllerGetItemByCurrentUserError,
    ThrowOnError
  >({
    ...options,
    url: '/api/inviter-config/current-user/item',
  });
};

/**
 * 启用/禁用
 * 启用/禁用
 */
export const inviterConfigSetIsEnabled = <ThrowOnError extends boolean = false>(
  options: Options<InviterConfigControllerSetIsEnabledData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    InviterConfigControllerSetIsEnabledResponse,
    InviterConfigControllerSetIsEnabledError,
    ThrowOnError
  >({
    ...options,
    url: '/api/inviter-config/enabled/{id}',
  });
};

/**
 * excel 模板
 * excel 模板
 */
export const inviterConfigGetExcelTemplate = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    InviterConfigControllerGetExcelTemplateResponse,
    InviterConfigControllerGetExcelTemplateError,
    ThrowOnError
  >({
    ...options,
    url: '/api/inviter-config/excel/tpl',
  });
};

/**
 * 导出数据到 Excel
 * Excel 数据
 */
export const inviterConfigExportExcel = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    InviterConfigControllerExportExcelResponse,
    InviterConfigControllerExportExcelError,
    ThrowOnError
  >({
    ...options,
    url: '/api/inviter-config/excel/output',
  });
};

/**
 * 导入数据
 * 请从 "/xxx/excel/tpl" 中下载模板
 */
export const inviterConfigImportExcel = <ThrowOnError extends boolean = false>(
  options: Options<InviterConfigControllerImportExcelData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    InviterConfigControllerImportExcelResponse,
    InviterConfigControllerImportExcelError,
    ThrowOnError
  >({
    ...options,
    ...formDataBodySerializer,
    headers: {
      'Content-Type': null,
      ...options?.headers,
    },
    url: '/api/inviter-config/excel/import',
  });
};
